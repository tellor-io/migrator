name: Checks
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests with Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - run: npm install
    - run: npx hardhat test
      env:
        # These are not needed for the tests but
        # hardhat fails to start if not present.
        NODE_URL_MAINNET: ${{ secrets.NODE_URL_MAINNET }}
        NODE_URL_RINKEBY: ${{ secrets.NODE_URL_RINKEBY }}
        PRIVATE_KEY: "00000000000000000000000000000000000000000000000000"
        ETHERSCAN: "XXXXXX"
  Linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run Solhint
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: npm install -g solhint
      - run: make solhint
  Security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Slither Static Analysis
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: npm install
      - run: sudo apt-get install python3-setuptools
      - run: wget https://github.com/ethereum/solidity/releases/download/v0.7.5/solc-static-linux && sudo mv solc-static-linux /usr/bin/solc && sudo chmod 744 /usr/bin/solc
      - run: git clone https://github.com/crytic/slither.git && cd slither && sudo python3 setup.py install
      - run: sed -i  '/TellorPlayground/d' hardhat.config.js # Workaround until this is fixed in https://github.com/crytic/slither/issues/743
      - run: make slither
        env:
          # These are not needed for the tests but
          # slither runs hardhat to compile the contracts and
          # hardhat compilation fails if these are not present.
          NODE_URL_MAINNET: ${{ secrets.NODE_URL_MAINNET }}
          NODE_URL_RINKEBY: ${{ secrets.NODE_URL_RINKEBY }}
          PRIVATE_KEY: "00000000000000000000000000000000000000000000000000"
          ETHERSCAN: "XXXXXX"
